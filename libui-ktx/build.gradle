plugins {
    id 'kotlin-multiplatform' version '1.3.0'
    id 'de.undercouch.download' version '3.4.3'
}
repositories {
    jcenter()
}

import org.jetbrains.kotlin.gradle.tasks.CInteropProcess

def os = org.gradle.internal.os.OperatingSystem.current()

task downloadFile(type: Download) {
    def release = "https://github.com/andlabs/libui/releases/download/$libuiVersion/libui-$libuiVersion"
    if (os.isWindows()) {
        src "$release-windows-amd64-mingw-static.zip"
    } else if (os.isLinux()) {
        src "$release-linux-amd64-static.tgz"
    } else if (os.isMacOsX()) {
        src "$release-darwin-amd64-static.tgz"
    }
    dest new File(buildDir, "libui-$libuiVersion.${os.isWindows() ? "zip" : "tgz"}")
    overwrite false
}

task unpackFile(dependsOn: downloadFile, type: Copy) {
    if (os.isWindows()) {
        from zipTree(downloadFile.dest)
    } else {
        from tarTree(resources.gzip(downloadFile.dest))
    }
    into buildDir
}

kotlin {
    targets {
        fromPreset(presets.macosX64, 'macosx')
        fromPreset(presets.linuxX64, 'linux')
        fromPreset(presets.mingwX64, 'windows')

        configure([macosx, linux, windows]) {
            compilations.main.outputKinds 'static'
            compilations.main.cinterops {
                libui {
                    includeDirs "${project.buildDir}"
                    defFile project.file("libui.def")
                }
            }
        }
    }

    sourceSets {
        commonMain {
            kotlin.srcDir('src/main/kotlin')
        }
    }
}

tasks.withType(CInteropProcess).all {
    dependsOn unpackFile
}

// TODO: this was needed, because if it's missing the build fails. why?
tasks.compileKotlinMetadata.enabled = false
